- name: install dependencies
  yum: name={{ item }} state=installed
  with_items:
    - sqlite-devel
    - gcc-c++
  sudo: true
  tags:
    - shogi

- name: clone app repogitory
  git: repo={{ app_repogitory_url }} dest={{ app_deploy_path }}
  sudo: true
  sudo_user: "{{ app_deploy_user }}"
  register: app_repogitory_cloned
  tags:
    - shogi

- name: bundle installed
  shell: $SHELL -lc "RAILS_ENV={{ item }} bundle install"
  with_items: app_setup_environments
  sudo: true
  sudo_user: "{{ app_deploy_user }}"
  args:
    chdir: "{{ app_root }}"
  register: bundle_installed
  changed_when: "'Installing' in bundle_installed.stdout_lines"
  tags:
    - shogi

- name: database create
  shell: $SHELL -lc "RAILS_ENV={{ item }} bundle exec rake db:create"
  with_items: app_setup_environments
  sudo: true
  sudo_user: "{{ app_deploy_user }}"
  args:
    chdir: "{{ app_root }}"
  register: rake_db_created
  changed_when: rake_db_created.stderr.find('shogi_{{ item }} already exists') == -1
  tags:
    - shogi

- name: database migrate
  shell: $SHELL -lc "RAILS_ENV={{ item }} bundle exec rake db:migrate"
  with_items: app_setup_environments
  sudo: true
  sudo_user: "{{ app_deploy_user }}"
  args:
    chdir: "{{ app_root }}"
  register: rake_db_migrated
  changed_when: rake_db_migrated.stdout.find('migrated') != -1
  tags:
    - shogi

- name: inject seeds
  shell: $SHELL -lc "RAILS_ENV={{ item[0] }} bundle exec rake db:seed_fu"
  sudo: true
  sudo_user: "{{ app_deploy_user }}"
  with_together:
    - app_setup_environments
    - rake_db_created.results
  args:
    chdir: "{{ app_root }}"
  when: item[1].stderr.find('shogi_{{ item[0] }} already exists') == -1
  tags:
    - shogi

- name: set init.d script
  template: src=shogi-server dest=/etc/init.d mode=0744
  sudo: true
  tags:
    - shogi

- name: ensure {{ app_name }} started and enabled
  service: name={{ app_name }} state=started enabled=yes
  sudo: true
  tags:
    - shogi
